return {
-- {
  --   "Saghen/blink.cmp",
  --   opts = function(_, opts)
  --     opts.sources = opts.sources or {}
  --     opts.sources.providers = opts.sources.providers or {}
  --     opts.sources.per_filetype = opts.sources.per_filetype or {}
  --
  --     -- Register provider (no change to existing ones)
  --     opts.sources.providers.zk_wikilink = {
  --       name = "ZK",
  --       module = "blink_cmp_zk_wikilink",
  --       opts = { zk_cmd = "zk" },
  --       score_offset = 100,
  --     }
  --
  --     -- Prepend only for markdown; leave global/defaults untouched
  --     local prev = opts.sources.per_filetype.markdown
  --       or (opts.sources.default and vim.deepcopy(opts.sources.default))
  --       or { "lsp", "path", "snippets", "buffer" }
  --
  --     local md = vim.deepcopy(prev)
  --     -- avoid duplicate if user reloads
  --     for i, v in ipairs(md) do
  --       if v == "zk_wikilink" then table.remove(md, i) break end
  --     end
  --     table.insert(md, 1, "zk_wikilink")
  --     opts.sources.per_filetype.markdown = md
  --
  --     -- Keep LazyVim’s trigger behavior; ensure trigger chars work
  --     opts.completion = opts.completion or {}
  --     opts.completion.trigger = opts.completion.trigger or {}
  --     opts.completion.trigger.show_on_trigger_character = true
  --     -- Don’t touch user’s blocked chars; the source provides '[' and '|' itself
  --   end,
  -- },
}
